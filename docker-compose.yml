services:
  backend:
    build:
      context: ./taxi-api
    ports:
      - "8080:8080"
    env_file:
      - ./taxi-api/.env
    
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    command: >
      sh -c "
      until pg_isready -h postgres-db -U postgres; do
        echo 'Waiting for database...';
        sleep 5;
      done;
      npx prisma migrate deploy &&
      npx ts-node prisma/seed.ts &&
      npm start"

  db:
    image: postgres:15
    container_name: postgres-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: taxi-api
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./taxi-app
    ports:
      - "80:80"
    env_file:
      - ./taxi-app/.env.local
    environment:
      NEXT_PUBLIC_API_BASE_URL: http://backend:8080
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data: